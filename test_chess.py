#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –æ–Ω–ª–∞–π–Ω —à–∞—Ö–º–∞—Ç
"""

import requests
import json
import time

def test_main_page():
    """–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
    
    try:
        response = requests.get('http://localhost:5000')
        assert response.status_code == 200
        assert '–û–Ω–ª–∞–π–Ω –®–∞—Ö–º–∞—Ç—ã' in response.text
        assert '–ù–∞–π—Ç–∏ –∏–≥—Ä—É' in response.text
        print("‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return False

def test_static_files():
    """–¢–µ—Å—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...")
    
    static_files = [
        '/static/css/style.css',
        '/static/css/chess.css',
        '/static/js/main.js',
        '/static/js/game.js'
    ]
    
    for file_path in static_files:
        try:
            response = requests.get(f'http://localhost:5000{file_path}')
            assert response.status_code == 200
            print(f"‚úÖ {file_path} –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {file_path}: {e}")
            return False
    
    return True

def test_chess_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —à–∞—Ö–º–∞—Ç"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ —à–∞—Ö–º–∞—Ç...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É —à–∞—Ö–º–∞—Ç
        from chess_game import ChessGame, Color, PieceType
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É
        game = ChessGame("player1", "player2")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫—É
        assert game.board[0][0] is not None  # –õ–∞–¥—å—è –≤ —É–≥–ª—É
        assert game.board[1][0] is not None  # –ü–µ—à–∫–∞
        assert game.board[6][0] is not None  # –ë–µ–ª–∞—è –ø–µ—à–∫–∞
        assert game.board[7][0] is not None  # –ë–µ–ª–∞—è –ª–∞–¥—å—è
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π —Ö–æ–¥
        assert game.current_turn == Color.WHITE
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω—ã–π —Ö–æ–¥
        valid_move = game.is_valid_move((6, 0), (5, 0))  # –ü–µ—à–∫–∞ e2-e3
        assert valid_move == True
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ö–æ–¥
        success = game.make_move((6, 0), (5, 0))
        assert success == True
        assert game.current_turn == Color.BLACK
        
        print("‚úÖ –õ–æ–≥–∏–∫–∞ —à–∞—Ö–º–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–∫–∏ —à–∞—Ö–º–∞—Ç: {e}")
        return False

def test_websocket_connection():
    """–¢–µ—Å—Ç WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    
    try:
        import socketio
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        sio = socketio.Client()
        
        connected = False
        
        @sio.event
        def connect():
            nonlocal connected
            connected = True
            print("‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        @sio.event
        def disconnect():
            print("üì° WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–∑–æ—Ä–≤–∞–Ω–æ")
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É
        sio.connect('http://localhost:5000')
        
        # –ñ–¥–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        time.sleep(1)
        
        if connected:
            sio.disconnect()
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ WebSocket: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω —à–∞—Ö–º–∞—Ç...")
    print("=" * 50)
    
    tests = [
        test_main_page,
        test_static_files,
        test_chess_logic,
        test_websocket_connection
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        try:
            if test():
                passed += 1
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
    
    print("=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")
    
    return passed == total

if __name__ == "__main__":
    main() 